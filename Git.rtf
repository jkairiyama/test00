{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;
\f3\froman\fcharset0 Times-Roman;\f4\fnil\fcharset0 Menlo-Regular;\f5\fmodern\fcharset0 Courier-Bold;
\f6\fmodern\fcharset0 Courier;\f7\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red39\green54\blue73;\red255\green255\blue255;\red38\green38\blue38;
\red7\green68\blue184;\red203\green35\blue57;\red19\green148\blue175;\red6\green33\blue79;\red0\green0\blue0;
\red27\green31\blue35;\red39\green54\blue73;\red26\green26\blue26;\red242\green242\blue242;\red26\green26\blue26;
\red242\green242\blue242;\red27\green31\blue35;}
{\*\expandedcolortbl;;\cssrgb\c20000\c27843\c35686;\cssrgb\c100000\c100000\c100000;\cssrgb\c20000\c20000\c20000;
\cssrgb\c0\c36078\c77255;\cssrgb\c84314\c22745\c28627;\cssrgb\c0\c64314\c74118;\cssrgb\c1176\c18431\c38431;\csgray\c0;
\cssrgb\c14118\c16078\c18431;\cssrgb\c20000\c27843\c35686;\cssrgb\c13333\c13333\c13333;\cssrgb\c96078\c96078\c96078;\cssrgb\c13333\c13333\c13333;
\cssrgb\c96078\c96078\c96078;\cssrgb\c14118\c16078\c18431;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18200\viewh10240\viewkind0
\deftab720
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Step 1: Create a local git repository\'a0
\f1\b0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\fs28 \cf0 Crear la carpeta del projecto\
\pard\pardeftab720\partightenfactor0

\f2 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 mnelson:Desktop mnelson$ \cf5 \strokec5 cd\cf4 \strokec4  \cf6 \strokec6 ~\cf4 \strokec4 /Desktop\
mnelson:Desktop mnelson$ mkdir myproject\
mnelson:Desktop mnelson$ \cf5 \strokec5 cd\cf4 \strokec4  myproject/
\fs20\fsmilli10200 \
\
\pard\pardeftab720\partightenfactor0

\f3\fs36 \cf2 \cb3 \strokec2 initialize a git repository in the root of the folder,\'a0
\fs28 \
\pard\pardeftab720\partightenfactor0

\f2 \cf4 \cb1 \strokec4 mnelson:myproject mnelson$ git init\
Initialized empty Git repository \cf6 \strokec6 in\cf4 \strokec4  /Users/mnelson/Desktop/myproject/.git/
\fs20\fsmilli10200 \
\
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \strokec2 Step 2: Add a new file to the repo
\f2\b0\fs20\fsmilli10200 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0

\f3\fs36 \cf2 \cb3 \strokec2 After creating the new file, you can use the\'a0{\field{\*\fldinst{HYPERLINK "http://git-scm.com/docs/git-status"}}{\fldrslt \cf7 \cb3 \strokec7 git status}}\'a0command to see which files git knows exist.\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf4 \cb1 \strokec4 mnelson:myproject mnelson$ git status\
On branch master\
\
Initial commit\
\
Untracked files:\
  (use \cf8 \strokec8 "git add <file>..."\cf4 \strokec4  to include \cf6 \strokec6 in\cf4 \strokec4  what will be committed)\
\
	mnelson.txt\
\
nothing added to commit but untracked files present (use \cf8 \strokec8 "git add"\cf4 \strokec4  to track)
\fs20\fsmilli10200 \
\pard\pardeftab720\partightenfactor0

\f3\fs36 \cf2 \cb3 \strokec2 \
What this basically says is, "Hey, we noticed you created a new file called mnelson.txt, but unless you use the 'git add' command we aren't going to do anything with it."\
A\'a0{\field{\*\fldinst{HYPERLINK "https://docs.github.com/en/free-pro-team@latest/github/getting-started-with-github/github-glossary#:~:text=the%20repository%20owner.-,commit,who%20made%20them%20and%20when."}}{\fldrslt \cf7 \cb3 \strokec7 commit}}\'a0is a record of what changes you have made since the last time you made a commit. Essentially, you make changes to your repo (for example, adding a file or modifying one) and then tell git to put those changes into a commit.\
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \strokec2 Step 3: Add a file to the staging environment
\f3\b0\fs36 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 To add a file to a commit, you first need to add it to the staging environment. To do this, you can use the\'a0{\field{\*\fldinst{HYPERLINK "http://git-scm.com/docs/git-add"}}{\fldrslt \cf7 \cb3 \strokec7 git add}}\'a0<filename> command (see Step 3 below).\
Once you've used the git add command to add all the files you want to the staging environment, you can then tell git to package them into a commit using the\'a0{\field{\*\fldinst{HYPERLINK "http://git-scm.com/docs/git-commit"}}{\fldrslt \cf7 \cb3 \strokec7 git commit}}\'a0command.\'a0\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs28 \cf9 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 git add jorge.txt
\fs22 \
\
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec2 Step 4: Create a commit\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs36 \cf2 \cb3 \strokec2 Run the command\'a0
\f5\b \cf2 \cb3 \strokec2 git commit
\f6\b0  -m "Your message about the commit"\
\pard\pardeftab720\partightenfactor0

\fs28 \cf2 \
\pard\pardeftab720\partightenfactor0

\f2 \cf4 \cb1 \strokec4 mnelson:myproject mnelson$ git commit -m \cf8 \strokec8 "This is my first commit!"\cf4 \strokec4 \
[master (root-commit) b345d9a] This is my first commit\cf6 \strokec6 !\cf4 \strokec4 \
 1 file changed, 1 insertion(+)\
 create mode 100644 mnelson.txt
\fs20\fsmilli10200 \
\pard\pardeftab720\partightenfactor0

\f6\fs36 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \strokec2 Step 5: Create a new branch\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs36 \cf2 \cb3 \strokec2 Branches allow you to move back and forth between 'states' of a project. Official git docs describe branches this way: \'91A branch in Git is simply a lightweight movable pointer to one of these commits.\'92\
\
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \strokec2 Step 6: Create a new repository on GitHub\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs36 \cf2 \cb3 \strokec2 To create a new repo on GitHub, log in and go to the GitHub home page.\'a0You can find the \'93New repository\'94 option under the \'93+\'94 sign next to your profile picture, in the top right corner of the navbar:\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf10 \cb1 \strokec10 git remote add origin https://github.com/jkairiyama/test00.git\
\
\pard\pardeftab720\partightenfactor0

\fs20\fsmilli10200 \cf4 \strokec4 mnelson:myproject mnelson$ git remote add origin https://github.com/cubeton/mynewrepository.git\
mnelson:myproject mnelson$ git push -u origin master\
Counting objects: 3, done.\
Writing objects: 100% (3/3), 263 bytes \cf6 \strokec6 |\cf4 \strokec4  0 bytes/s, done.\
Total 3 (delta 0), reused 0 (delta 0)\
To https://github.com/cubeton/mynewrepository.git\
 \cf6 \strokec6 *\cf4 \strokec4  [new branch]      master -\cf6 \strokec6 >\cf4 \strokec4  master\
Branch master \cf5 \strokec5 set\cf4 \strokec4  up to track remote branch master from origin.\
\pard\pardeftab720\partightenfactor0

\fs28 \cf10 \strokec10 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \cb3 \strokec2 To create a token en GitHub, on menu \'93setting\'94 (on you face photo) ->  \'93<> Developer settings\'94 (\cf11 \cb3 \outl0\strokewidth0 left menu ) -> \'93Personal access tokens\'94 -> Generate new token (don\'92t forget to select \'93repo\'94)\
\cf2 \cb3 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sa336\partightenfactor0

\fs48 \cf2 \cb3 \strokec2 Step 7: Push a branch to GitHub\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs36 \cf2 \cb3 \strokec2 To push changes onto a new branch on GitHub, you'll want to run\'a0{\field{\*\fldinst{HYPERLINK "http://git-scm.com/docs/git-push"}}{\fldrslt \cf7 \cb3 \strokec7 git push}}\'a0origin yourbranchname. GitHub will automatically create the branch for you on the remote repository:\
\pard\pardeftab720\partightenfactor0

\f2\fs20\fsmilli10200 \cf4 \cb1 \strokec4 mnelson:myproject mnelson$ git push origin my-new-branch\
Counting objects: 3, done.\
Delta compression using up to 8 threads.\
Compressing objects: 100% (2/2), done.\
Writing objects: 100% (3/3), 313 bytes \cf6 \strokec6 |\cf4 \strokec4  0 bytes/s, done.\
Total 3 (delta 0), reused 0 (delta 0)\
To https://github.com/cubeton/mynewrepository.git\
 \cf6 \strokec6 *\cf4 \strokec4  [new branch]      my-new-branch -\cf6 \strokec6 >\cf4 \strokec4  my-new-branch\
\pard\pardeftab720\partightenfactor0

\f6\fs36 \cf2 \cb3 \strokec2 \
First create a new branch: git branch test02\
Then:\
\pard\pardeftab720\partightenfactor0

\fs32\fsmilli16150 \cf12 \cb13 \strokec12 git push https://<GITHUB_ACCESS_TOKEN>@github.com/<GITHUB_USERNAME>/<REPOSITORY_NAME>.git\
\pard\pardeftab720\partightenfactor0

\fs32\fsmilli16150 \cf14 \cb15 \outl0\strokewidth0 git push https://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@github.com/jkairiyama/
\f2\fs28 \cf16 \cb1 test00
\f6\fs32\fsmilli16150 \cf14 \cb15 .git
\fs32\fsmilli16150 \cf12 \cb13 \outl0\strokewidth0 \strokec12 \
\pard\pardeftab720\partightenfactor0
\cf12 A new branch on GitHub is created on repository test00\
\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \strokec2 Step 8: Create a pull request (PR)\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs36 \cf2 \cb3 \strokec2 A pull request (or PR) is a way to alert a repo's owners that you want to make some changes to their code. It allows them to review the code and make sure it looks good before putting your changes on the primary branch.\
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \strokec2 Step 9: Merge a PR
\f3\b0\fs36 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 After the PR, merge the PR\
When you're done, I recommend deleting your branch (too many branches can become messy), so hit that grey 'Delete branch' button as well.\
\pard\pardeftab720\sa336\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \strokec2 Step 10: Get changes on GitHub back to your computer\
\pard\pardeftab720\partightenfactor0

\f3\b0\fs36 \cf2 \cb3 \strokec2 In order to get the most recent changes that you or others have merged on GitHub, use the git pull origin master command (when working on the primary branch). In most cases, this can be shortened to \'93git pull\'94.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f7\b\fs28 \cf9 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 git pull origin Dev_test\
}